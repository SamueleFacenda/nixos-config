# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/df2a25e9-9545-4d4d-a0fa-33e3ab7e88f7";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-32b63056-79f6-45d0-b8ad-9ad24884ab8f".device = "/dev/disk/by-uuid/32b63056-79f6-45d0-b8ad-9ad24884ab8f";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/616E-F0AF";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ 
      { 
        device = "/dev/disk/by-uuid/6f4d550e-f434-4059-9e17-ddba1a470789"; 
        encrypted = {
          enable = true;
          label = "swap";
          blkDev = "/dev/disk/by-uuid/00bbbd7a-0e94-4d09-ac42-78a20c979c06";
        };
      }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
